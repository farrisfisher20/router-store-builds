{"version":3,"sources":["modules/router-store/router-store.umd.js"],"names":["global","factory","exports","module","require","define","amd","ngrx","routerStore","ng","core","router","rxjs","operators","this","store","NavigationActionTiming","ROUTER_ERROR","RouterStateSerializer","DefaultRouterStateSerializer","prototype","serialize","routerState","root","serializeRoute","url","route","_this","children","map","c","params","paramMap","data","outlet","routeConfig","component","undefined","queryParams","queryParamMap","fragment","parent","firstChild","pathFromRoot","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","RouterTrigger","_ROUTER_CONFIG","InjectionToken","ROUTER_CONFIG","DEFAULT_ROUTER_FEATURENAME","_createRouterConfig","config","stateKey","serializer","navigationActionTiming","PreActivation","ɵ0","StoreRouterConnectingModule","store$$1","router$$1","errorHandler","trigger","NONE","setUpStoreStateListener","setUpRouterEventsListener","forRoot","ngModule","providers","provide","useValue","useClass","pipe","select","withLatestFrom","subscribe","_a","_b","navigateIfNeeded","routerStoreState","storeState","state","ROUTER","STORE","navigateByUrl","catch","handleError","routesRecognized","dispatchNavLate","PostActivation","events","event","NavigationStart","snapshot","dispatchRouterRequest","RoutesRecognized","dispatchRouterNavigation","NavigationCancel","dispatchRouterCancel","reset","NavigationError","dispatchRouterError","NavigationEnd","dispatchRouterNavigated","dispatchRouterAction","lastRoutesRecognized","nextRouterState","id","urlAfterRedirects","type","payload","dispatch","decorators","NgModule","args","useFactory","deps","ctorParameters","Store","Router","ErrorHandler","Inject","ɵngrx_modules_router_store_router_store_a","ɵngrx_modules_router_store_router_store_b","ROUTER_CANCEL","ROUTER_NAVIGATION","ROUTER_NAVIGATED","ROUTER_REQUEST","routerReducer","action","navigationId","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 6.1.0+59.sha-df8fc60\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@ngrx/store'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/router-store', ['exports', '@angular/core', '@angular/router', '@ngrx/store', 'rxjs/operators'], factory) :\n    (factory((global.ngrx = global.ngrx || {}, global.ngrx.routerStore = {}),global.ng.core,global.ng.router,global['@ngrx/store'],global.rxjs.operators));\n}(this, (function (exports,core,router,store,operators) { 'use strict';\n\n    /**\n     * An action dispatched when a router navigation request is fired.\n     */\n    var ROUTER_REQUEST = '@ngrx/router-store/request';\n    /**\n     * An action dispatched when the router navigates.\n     */\n    var ROUTER_NAVIGATION = '@ngrx/router-store/navigation';\n    /**\n     * An action dispatched when the router cancels navigation.\n     */\n    var ROUTER_CANCEL = '@ngrx/router-store/cancel';\n    /**\n     * An action dispatched when the router errors.\n     */\n    var ROUTER_ERROR = '@ngrx/router-store/error';\n    /**\n     * An action dispatched after navigation has ended and new route is active.\n     */\n    var ROUTER_NAVIGATED = '@ngrx/router-store/navigated';\n\n    function routerReducer(state, action) {\n        switch (action.type) {\n            case ROUTER_NAVIGATION:\n            case ROUTER_ERROR:\n            case ROUTER_CANCEL:\n                return {\n                    state: action.payload.routerState,\n                    navigationId: action.payload.event.id,\n                };\n            default:\n                return state;\n        }\n    }\n\n    var RouterStateSerializer = /** @class */ (function () {\n        function RouterStateSerializer() {\n        }\n        return RouterStateSerializer;\n    }());\n    var DefaultRouterStateSerializer = /** @class */ (function () {\n        function DefaultRouterStateSerializer() {\n        }\n        DefaultRouterStateSerializer.prototype.serialize = function (routerState) {\n            return {\n                root: this.serializeRoute(routerState.root),\n                url: routerState.url,\n            };\n        };\n        DefaultRouterStateSerializer.prototype.serializeRoute = function (route) {\n            var _this = this;\n            var children = route.children.map(function (c) { return _this.serializeRoute(c); });\n            return {\n                params: route.params,\n                paramMap: route.paramMap,\n                data: route.data,\n                url: route.url,\n                outlet: route.outlet,\n                routeConfig: {\n                    component: route.routeConfig ? route.routeConfig.component : undefined,\n                },\n                queryParams: route.queryParams,\n                queryParamMap: route.queryParamMap,\n                fragment: route.fragment,\n                component: (route.routeConfig\n                    ? route.routeConfig.component\n                    : undefined),\n                root: undefined,\n                parent: undefined,\n                firstChild: children[0],\n                pathFromRoot: undefined,\n                children: children,\n            };\n        };\n        return DefaultRouterStateSerializer;\n    }());\n\n    var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var __read = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    (function (NavigationActionTiming) {\n        NavigationActionTiming[NavigationActionTiming[\"PreActivation\"] = 1] = \"PreActivation\";\n        NavigationActionTiming[NavigationActionTiming[\"PostActivation\"] = 2] = \"PostActivation\";\n    })(exports.NavigationActionTiming || (exports.NavigationActionTiming = {}));\n    var _ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Internal Configuration');\n    var ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Configuration');\n    var DEFAULT_ROUTER_FEATURENAME = 'router';\n    function _createRouterConfig(config) {\n        return __assign({ stateKey: DEFAULT_ROUTER_FEATURENAME, serializer: DefaultRouterStateSerializer, navigationActionTiming: exports.NavigationActionTiming.PreActivation }, config);\n    }\n    var RouterTrigger;\n    (function (RouterTrigger) {\n        RouterTrigger[RouterTrigger[\"NONE\"] = 1] = \"NONE\";\n        RouterTrigger[RouterTrigger[\"ROUTER\"] = 2] = \"ROUTER\";\n        RouterTrigger[RouterTrigger[\"STORE\"] = 3] = \"STORE\";\n    })(RouterTrigger || (RouterTrigger = {}));\n    var ɵ0 = {};\n    /**\n     * Connects RouterModule with StoreModule.\n     *\n     * During the navigation, before any guards or resolvers run, the router will dispatch\n     * a ROUTER_NAVIGATION action, which has the following signature:\n     *\n     * ```\n     * export type RouterNavigationPayload = {\n     *   routerState: SerializedRouterStateSnapshot,\n     *   event: RoutesRecognized\n     * }\n     * ```\n     *\n     * Either a reducer or an effect can be invoked in response to this action.\n     * If the invoked reducer throws, the navigation will be canceled.\n     *\n     * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n     * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n     *\n     * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n     * which can be used to restore the consistency of the store.\n     *\n     * Usage:\n     *\n     * ```typescript\n     * @NgModule({\n     *   declarations: [AppCmp, SimpleCmp],\n     *   imports: [\n     *     BrowserModule,\n     *     StoreModule.forRoot(mapOfReducers),\n     *     RouterModule.forRoot([\n     *       { path: '', component: SimpleCmp },\n     *       { path: 'next', component: SimpleCmp }\n     *     ]),\n     *     StoreRouterConnectingModule\n     *   ],\n     *   bootstrap: [AppCmp]\n     * })\n     * export class AppModule {\n     * }\n     * ```\n     */\n    var StoreRouterConnectingModule = /** @class */ (function () {\n        function StoreRouterConnectingModule(store$$1, router$$1, serializer, errorHandler, config) {\n            this.store = store$$1;\n            this.router = router$$1;\n            this.serializer = serializer;\n            this.errorHandler = errorHandler;\n            this.config = config;\n            this.trigger = RouterTrigger.NONE;\n            this.stateKey = this.config.stateKey;\n            this.setUpStoreStateListener();\n            this.setUpRouterEventsListener();\n        }\n        StoreRouterConnectingModule.forRoot = function (config) {\n            if (config === void 0) { config = {}; }\n            return {\n                ngModule: StoreRouterConnectingModule,\n                providers: [\n                    { provide: _ROUTER_CONFIG, useValue: config },\n                    {\n                        provide: RouterStateSerializer,\n                        useClass: config.serializer\n                            ? config.serializer\n                            : DefaultRouterStateSerializer,\n                    },\n                ],\n            };\n        };\n        StoreRouterConnectingModule.prototype.setUpStoreStateListener = function () {\n            var _this = this;\n            this.store\n                .pipe(store.select(this.stateKey), operators.withLatestFrom(this.store))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), routerStoreState = _b[0], storeState = _b[1];\n                _this.navigateIfNeeded(routerStoreState, storeState);\n            });\n        };\n        StoreRouterConnectingModule.prototype.navigateIfNeeded = function (routerStoreState, storeState) {\n            var _this = this;\n            if (!routerStoreState || !routerStoreState.state) {\n                return;\n            }\n            if (this.trigger === RouterTrigger.ROUTER) {\n                return;\n            }\n            var url = routerStoreState.state.url;\n            if (this.router.url !== url) {\n                this.storeState = storeState;\n                this.trigger = RouterTrigger.STORE;\n                this.router.navigateByUrl(url).catch(function (error) {\n                    _this.errorHandler.handleError(error);\n                });\n            }\n        };\n        StoreRouterConnectingModule.prototype.setUpRouterEventsListener = function () {\n            var _this = this;\n            var dispatchNavLate = this.config.navigationActionTiming ===\n                exports.NavigationActionTiming.PostActivation;\n            var routesRecognized;\n            this.router.events\n                .pipe(operators.withLatestFrom(this.store))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), event = _b[0], storeState = _b[1];\n                if (event instanceof router.NavigationStart) {\n                    _this.routerState = _this.serializer.serialize(_this.router.routerState.snapshot);\n                    if (_this.trigger !== RouterTrigger.STORE) {\n                        _this.storeState = storeState;\n                        _this.dispatchRouterRequest(event);\n                    }\n                }\n                else if (event instanceof router.RoutesRecognized) {\n                    routesRecognized = event;\n                    if (!dispatchNavLate && _this.trigger !== RouterTrigger.STORE) {\n                        _this.dispatchRouterNavigation(event);\n                    }\n                }\n                else if (event instanceof router.NavigationCancel) {\n                    _this.dispatchRouterCancel(event);\n                    _this.reset();\n                }\n                else if (event instanceof router.NavigationError) {\n                    _this.dispatchRouterError(event);\n                    _this.reset();\n                }\n                else if (event instanceof router.NavigationEnd) {\n                    if (_this.trigger !== RouterTrigger.STORE) {\n                        if (dispatchNavLate) {\n                            _this.dispatchRouterNavigation(routesRecognized);\n                        }\n                        _this.dispatchRouterNavigated(event);\n                    }\n                    _this.reset();\n                }\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterRequest = function (event) {\n            this.dispatchRouterAction(ROUTER_REQUEST, { event: event });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterNavigation = function (lastRoutesRecognized) {\n            var nextRouterState = this.serializer.serialize(lastRoutesRecognized.state);\n            this.dispatchRouterAction(ROUTER_NAVIGATION, {\n                routerState: nextRouterState,\n                event: new router.RoutesRecognized(lastRoutesRecognized.id, lastRoutesRecognized.url, lastRoutesRecognized.urlAfterRedirects, nextRouterState),\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterCancel = function (event) {\n            this.dispatchRouterAction(ROUTER_CANCEL, {\n                routerState: this.routerState,\n                storeState: this.storeState,\n                event: event,\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterError = function (event) {\n            this.dispatchRouterAction(ROUTER_ERROR, {\n                routerState: this.routerState,\n                storeState: this.storeState,\n                event: new router.NavigationError(event.id, event.url, \"\" + event),\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterNavigated = function (event) {\n            this.dispatchRouterAction(ROUTER_NAVIGATED, { event: event });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterAction = function (type, payload) {\n            this.trigger = RouterTrigger.ROUTER;\n            try {\n                this.store.dispatch({ type: type, payload: payload });\n            }\n            finally {\n                this.trigger = RouterTrigger.NONE;\n            }\n        };\n        StoreRouterConnectingModule.prototype.reset = function () {\n            this.trigger = RouterTrigger.NONE;\n            this.storeState = null;\n            this.routerState = null;\n        };\n        StoreRouterConnectingModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [\n                            {\n                                provide: _ROUTER_CONFIG,\n                                useValue: ɵ0,\n                            },\n                            {\n                                provide: ROUTER_CONFIG,\n                                useFactory: _createRouterConfig,\n                                deps: [_ROUTER_CONFIG],\n                            },\n                            {\n                                provide: RouterStateSerializer,\n                                useClass: DefaultRouterStateSerializer,\n                            },\n                        ],\n                    },] }\n        ];\n        /** @nocollapse */\n        StoreRouterConnectingModule.ctorParameters = function () { return [\n            { type: store.Store },\n            { type: router.Router },\n            { type: RouterStateSerializer },\n            { type: core.ErrorHandler },\n            { type: undefined, decorators: [{ type: core.Inject, args: [ROUTER_CONFIG,] }] }\n        ]; };\n        return StoreRouterConnectingModule;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_router_store_router_store_a = _ROUTER_CONFIG;\n    exports.ɵngrx_modules_router_store_router_store_b = _createRouterConfig;\n    exports.ROUTER_ERROR = ROUTER_ERROR;\n    exports.ROUTER_CANCEL = ROUTER_CANCEL;\n    exports.ROUTER_NAVIGATION = ROUTER_NAVIGATION;\n    exports.ROUTER_NAVIGATED = ROUTER_NAVIGATED;\n    exports.ROUTER_REQUEST = ROUTER_REQUEST;\n    exports.routerReducer = routerReducer;\n    exports.StoreRouterConnectingModule = StoreRouterConnectingModule;\n    exports.ROUTER_CONFIG = ROUTER_CONFIG;\n    exports.DEFAULT_ROUTER_FEATURENAME = DEFAULT_ROUTER_FEATURENAME;\n    exports.RouterStateSerializer = RouterStateSerializer;\n    exports.DefaultRouterStateSerializer = DefaultRouterStateSerializer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router-store.umd.js.map\n"]}